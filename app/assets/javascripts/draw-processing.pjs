// Jo's stuff

int barWidth = 40;
int[] hue;

bool imageSet = false;
int imgeWaitTime = 0;
bool inited = false;
PImage im;


var imWidth;
var imHeight; 
var imX = 0;
var imY = 0;

var mouseDown = false;

// Setup tools
int[] draww_tools = new int[3];
draww_tools[0] = new vEllipse();
draww_tools[1] = new vRect();

var tool = draww_tools[0];
/* @pjs preload="/images/drop-here.png"; */
void setTool(t) {
	if(t == 'vRect') {
		//tool = new vRect();
		tool = draww_tools[1];
	}
	if(t == 'vEllipse') {
		//tool = new vEllipse();
		tool = draww_tools[0];
	}
} 

void setup() 
{
  size(640, 427);
  background(#999999);
  colorMode(HSB, 360, 1, 1); 
  smooth();
  noStroke();

  // Callback for normal JS stuff
  if(typeof window.processingReady == 'function') {
	processingReady();
  }
}
 
void draw() 
{
  
  if(imageSet){ 
	
	if(im){
		
		//wait a few frames before trying to display image.
		//TODO: need to find a better way to know when the image is ready.
		// the imageLoaded callback doesn't seem to work.
		if(imgeWaitTime >= 0){
			imgeWaitTime-= 1;
		}else{
			imageSet = false;
			inited = true;	
			
			//clear background
			background(#000000);	
		
			//draw image
			image(im , imX , imY , width , height);
			
			console.log("draw" , im.width , imY);
		}
	}

  }else if(!inited){

  	// var tWidth = 100;
  	// 	var tHeight = 50;
  	// 	PFont fontA	  = loadFont("Arial");
  	// 	int fontSize = 30;
  	// 	textFont(fontA, fontSize);
  	// 	textAlign(CENTER);
  	// 	text( "Drop in an image!", width*0.5, height*0.5 );	  	
	PImage dropHere;
	dropHere = loadImage("/images/drop-here.png");
	// image(dropHere, dropHere.width, dropHere.height);
	image(dropHere, 
		int(width/2 - (dropHere.width/2)), 
		int(height/2 - (dropHere.height/2))
	);
  }else{
    if(mouseDown){
		tool.draw();
  	}	
  }
  

  
  

}


void setImage( s )
{
	im = loadImage(s , "" , imageLoaded());


}

void imageLoaded(){
	imageSet = true;
	imgeWaitTime = 10; // wait for 10 frames before displaing the image 
	//to give time for it to load and init.
	
	//var ratio;		

	//imHeight = 800;
	//imHeight = 600
	
	/*if(im.width > im.height){
		ratio = im.height/im.width;
		imHeight = 800*ratio;
		imWidth = 800;
		imX = 600*0.5 - imHeight*0.5;
		imY = 0;
	}else{
		ratio = im.width/im.height;
		imWidth = 600*ratio;
		imHeight = 600;
		imX = 0;
		imY = (800*0.5) - (imWidth*0.5);
	}
	
	console.log("imageLoaded" , imX , imY , imWidth, imHeight, ratio , im.width, im.height );

	*/
	
	console.log("imageLoaded");
	ready_to_save = true;
}

void mousePressed() {  
  mouseDown = true;
}  
  
void mouseReleased()  
{  
  mouseDown = false; 
}  

// Kanes new bits

void resizeCanvas(w, h) {
	size(w, h);
	if(im) { image(im , imX , imY , width , height); }
}
